name: Coverage Check

on: 
  pull_request:
    branches: [ main ]

jobs:
  coverage:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
    - run: npm ci
    - name: Run coverage
      run: |
        npm run test:coverage > coverage-output.txt 2>&1
        echo "Coverage completed"
    - name: Post coverage comment
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          
          try {
            const output = fs.readFileSync('coverage-output.txt', 'utf8');
            console.log('Coverage output:', output);
            
            // Extract the coverage table
            const lines = output.split('\n');
            const tableStart = lines.findIndex(line => line.includes('File'));
            
            let coverageTable = '';
            if (tableStart !== -1) {
              // Get table lines (usually next 10-15 lines after "File" header)
              const tableLines = lines.slice(tableStart, tableStart + 15)
                .filter(line => line.trim() !== '');
              coverageTable = tableLines.join('\n');
            } else {
              coverageTable = 'Coverage table not found';
            }
            
            const commentBody = `## ðŸ“Š Coverage Report

\`\`\`
${coverageTable}
\`\`\`

**Command to run locally:** \`npm run test:coverage\``;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });
            
            console.log('Comment posted successfully');
          } catch (error) {
            console.error('Error posting comment:', error);
            
            // Fallback comment
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '## ðŸ“Š Coverage Report\n\nCoverage check completed. Run `npm run test:coverage` locally to see results.'
            });
          }