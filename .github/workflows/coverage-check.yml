name: Coverage Check

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  coverage:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests with coverage
      run: npm run coverage:warn
      
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report
        path: coverage/
        retention-days: 7
        
    - name: Coverage Summary Comment
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          try {
            // Read coverage summary
            const coverageFile = path.join(process.cwd(), 'coverage', 'coverage-summary.json');
            if (!fs.existsSync(coverageFile)) {
              console.log('Coverage summary not found');
              return;
            }
            
            const coverage = JSON.parse(fs.readFileSync(coverageFile, 'utf8'));
            const total = coverage.total;
            
            // Format coverage percentages
            const formatPct = (pct) => `${pct.toFixed(2)}%`;
            
            // Determine status emojis
            const getEmoji = (pct, target) => pct >= target ? '🟢' : pct >= target - 15 ? '🟡' : '🔴';
            
            const linesEmoji = getEmoji(total.lines.pct, 95);
            const functionsEmoji = getEmoji(total.functions.pct, 90);
            const branchesEmoji = getEmoji(total.branches.pct, 85);
            
            // Create comment body
            const commentBody = `
            ## 🧪 Coverage Report
            
            | Metric | Coverage | Status |
            |--------|----------|--------|
            | ${linesEmoji} **Lines** | ${formatPct(total.lines.pct)} (${total.lines.covered}/${total.lines.total}) | ${total.lines.pct >= 95 ? 'Excellent' : total.lines.pct >= 80 ? 'Good' : 'Needs Improvement'} |
            | ${functionsEmoji} **Functions** | ${formatPct(total.functions.pct)} (${total.functions.covered}/${total.functions.total}) | ${total.functions.pct >= 90 ? 'Excellent' : total.functions.pct >= 70 ? 'Good' : 'Needs Improvement'} |
            | ${branchesEmoji} **Branches** | ${formatPct(total.branches.pct)} (${total.branches.covered}/${total.branches.total}) | ${total.branches.pct >= 85 ? 'Excellent' : total.branches.pct >= 65 ? 'Good' : 'Needs Improvement'} |
            
            ### 📋 ADR-0005 Compliance
            ${total.lines.pct >= 95 ? '✅ **COMPLIANT** - Meets mandatory testing requirements' : '⚠️ **NEEDS IMPROVEMENT** - Below 95% line coverage target'}
            
            ### 💡 Coverage Tips
            - Run \`npm run coverage:html\` for detailed line-by-line coverage
            - See [ADR-0005](docs/adr/0005-mandatory-testing.md) for testing guidelines
            - Focus on files with <80% coverage first
            
            ---
            *This is an automated coverage report. It provides warnings but does not block merges.*
            `;
            
            // Post comment on PR
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });
            
          } catch (error) {
            console.log('Error posting coverage comment:', error.message);
          }