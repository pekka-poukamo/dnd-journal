name: Deploy to Raspberry Pi

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      PI_HOST: ${{ secrets.PI_HOST }}
      PI_USER: ${{ secrets.PI_USER }}
      PI_SSH_PORT: ${{ secrets.PI_SSH_PORT }}
      PI_REPO_PATH: ${{ secrets.PI_REPO_PATH }}
      DEPLOY_DEBUG: ${{ secrets.DEPLOY_DEBUG }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: npm
      
      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:client

      - name: Generate version info (log only)
        run: |
          export RUN_NUMBER=${{ github.run_number }}
          bash scripts/generate-version.sh

      - name: Start SSH agent and add key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.PI_SSH_PRIVATE_KEY }}

      - name: Connectivity diagnostics (optional)
        if: env.DEPLOY_DEBUG == 'true'
        continue-on-error: true
        run: |
          PORT=${PI_SSH_PORT:-22}
          echo "DNS resolution for host"
          getent hosts "${PI_HOST}" || true
          echo "Attempt IPv4 reachability"
          HOST_V4=$(getent ahostsv4 "$PI_HOST" | awk '{print $1}' | head -n1 || true)
          TARGET=${HOST_V4:-$PI_HOST}
          if command -v nc >/dev/null 2>&1; then
            nc -vz -4 -w 5 "$TARGET" "$PORT" || true
          else
            timeout 5 bash -lc "cat < /dev/null > /dev/tcp/${TARGET}/${PORT}" || true
          fi

      - name: Add host key to known_hosts
        run: |
          PORT=${PI_SSH_PORT:-22}
          mkdir -p ~/.ssh
          HOST_V4=$(getent ahostsv4 "$PI_HOST" | awk '{print $1}' | head -n1 || true)
          TARGET_FOR_SCAN=${HOST_V4:-$PI_HOST}
          if timeout 5 bash -lc "cat < /dev/null > /dev/tcp/${TARGET_FOR_SCAN}/${PORT}"; then
            if [ -n "$HOST_V4" ]; then
              ssh-keyscan -4 -p "$PORT" -T 5 "$TARGET_FOR_SCAN" >> ~/.ssh/known_hosts 2>/dev/null || true
            else
              ssh-keyscan -p "$PORT" -T 5 "$TARGET_FOR_SCAN" >> ~/.ssh/known_hosts 2>/dev/null || true
            fi
          else
            echo "Host ${TARGET_FOR_SCAN}:${PORT} not reachable; skipping ssh-keyscan"
          fi

      - name: Push to Pi bare repository
        run: |
          PORT=${PI_SSH_PORT:-22}
          HOST_V4=$(getent ahostsv4 "$PI_HOST" | awk '{print $1}' | head -n1 || true)
          TARGET_HOST=${HOST_V4:-$PI_HOST}
          SSH_OPTS="-o StrictHostKeyChecking=accept-new -o ConnectTimeout=10 -o ServerAliveInterval=5 -o ServerAliveCountMax=3"
          if [ -n "$HOST_V4" ]; then SSH_OPTS="$SSH_OPTS -4"; fi
          if [ "${DEPLOY_DEBUG:-}" = "true" ]; then SSH_OPTS="$SSH_OPTS -v"; fi
          export GIT_SSH_COMMAND="ssh ${SSH_OPTS}"
          git remote add pi "ssh://${PI_USER}@${TARGET_HOST}:${PORT}${PI_REPO_PATH}"
          git push pi HEAD:main