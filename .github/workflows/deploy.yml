name: Deploy to Raspberry Pi

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      PI_HOST: ${{ secrets.PI_HOST }}
      PI_USER: ${{ secrets.PI_USER }}
      PI_SSH_PORT: ${{ secrets.PI_SSH_PORT }}
      PI_REPO_PATH: ${{ secrets.PI_REPO_PATH }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: npm
      
      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:client

      - name: Generate version info (log only)
        run: |
          export RUN_NUMBER=${{ github.run_number }}
          bash scripts/generate-version.sh

      - name: Start SSH agent and add key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.PI_SSH_PRIVATE_KEY }}
          SSH_PASSPHRASE: ${{ secrets.PI_SSH_PASSPHRASE }}
        run: |
          eval "$(ssh-agent -s)"
          echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> "$GITHUB_ENV"
          echo "SSH_AGENT_PID=$SSH_AGENT_PID" >> "$GITHUB_ENV"
          if [ -n "$SSH_PASSPHRASE" ]; then
            echo "echo \"$SSH_PASSPHRASE\"" > /tmp/ssh_askpass.sh
            chmod 700 /tmp/ssh_askpass.sh
            export SSH_ASKPASS=/tmp/ssh_askpass.sh
            export SSH_ASKPASS_REQUIRE=force
            export DISPLAY=:0
          fi
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
          if [ -f /tmp/ssh_askpass.sh ]; then rm -f /tmp/ssh_askpass.sh; unset SSH_ASKPASS SSH_ASKPASS_REQUIRE; fi

      - name: Add Pi host to known_hosts
        run: |
          mkdir -p ~/.ssh
          PORT=${PI_SSH_PORT:-22}
          ssh-keyscan -p "$PORT" -H "$PI_HOST" >> ~/.ssh/known_hosts

      - name: Push to Pi bare repository
        run: |
          PORT=${PI_SSH_PORT:-22}
          git remote add pi "ssh://${PI_USER}@${PI_HOST}:${PORT}${PI_REPO_PATH}"
          git push pi HEAD:main